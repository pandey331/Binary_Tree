#include <iostream>
#include<vector>
#include<stack>

using namespace std;
class node{
    public:
    int data;
    node*left;
    node*right;
    
    node(int d)
    {
        this->data=d;
        this->left=NULL;
        this->right=NULL;
    }
    
};
vector<int> preorderTraversal(node* root) {
    
  vector < int > ans;
   if(root==nullptr) return ans;
        stack<node*>s;
        
        s.push(root);
        
        while(!s.empty())
        {
          node* topnode=s.top();
          ans.push_back(topnode->data);
          s.pop();

          if(topnode->right!=nullptr)
          {
              s.push(topnode->right);
          }
          if(topnode->left!=nullptr)
          {
              s.push(topnode->left);
          }
        }
        return ans;
};


int main()
{
    node*root=new node(1);
    root->left=new node(2);
    root->right=new node(3);
    root -> left -> left = new node(4);
    root -> left -> right = new node(5);
    root -> left -> right -> left = new node(8);
    root -> right -> left = new node(6);
    root -> right -> right = new node(7);
    root -> right -> right -> left = new node(9);
    root -> right -> right -> right = new node(10);
    
    //to print ans
    vector<int>ans;
    ans=preorderTraversal(root);
    
    cout<<"THe preorder traversal is"<<endl;
    
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i]<<" ";
    }

    return 0;
}
