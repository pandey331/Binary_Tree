#include <iostream>
#include<vector>
#include<stack>

using namespace std;
class node{
    public:
    int data;
    node*left;
    node*right;
    
    node(int d)
    {
        this->data=d;
        this->left=NULL;
        this->right=NULL;
    }
    
};
vector<int>inordertrav(node*curr)
{
  vector < int > inOrder;
  stack < node * > s;
  while (true) {
    if (curr != NULL) {
      s.push(curr);
      curr = curr -> left;
    } else {
      if (s.empty()) break;
      curr = s.top();
      inOrder.push_back(curr -> data);
      s.pop();
      curr = curr -> right;
    }
  }
  return inOrder;
};


int main()
{
    node*root=new node(1);
    root->left=new node(2);
    root->right=new node(3);
    root -> left -> left = new node(4);
    root -> left -> right = new node(5);
    root -> left -> right -> left = new node(8);
    root -> right -> left = new node(6);
    root -> right -> right = new node(7);
    root -> right -> right -> left = new node(9);
    root -> right -> right -> right = new node(10);
    
    //to print ans
    vector<int>inOrder;
    inOrder=inordertrav(root);
    
    cout<<"THe inorder traversal is"<<endl;
    
    for(int i=0;i<inOrder.size();i++)
    {
        cout<<inOrder[i]<<" ";
    }

    return 0;
}
